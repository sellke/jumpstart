---
globs: *.ts,*.tsx
description: Mantine server component import patterns
---

# Mantine Server Components: Avoid Dot Notation

When using Mantine components in React Server Components, do NOT use dot notation for imports or component access.

## ❌ Avoid (Dot Notation):
```tsx
// Don't import with namespace
import * as Mantine from '@mantine/core';
<Mantine.Button>Click me</Mantine.Button>

// Don't use dot notation for sub-components
import { Button } from '@mantine/core';
<Button.Group>
  <Button>One</Button>
  <Button>Two</Button>
</Button.Group>
```

## ✅ Prefer (Named Imports):
```tsx
// Use direct named imports
import { Button, ButtonGroup } from '@mantine/core';

<ButtonGroup>
  <Button>One</Button>
  <Button>Two</Button>
</ButtonGroup>
```

## Reasoning:
- Server components require explicit imports for better tree-shaking
- Dot notation can cause hydration mismatches in SSR
- Named imports provide better TypeScript support
- Cleaner and more explicit component usage

## Applies to:
- All Mantine UI components (`@mantine/core`)
- Mantine form components (`@mantine/form`)
- Mantine dates components (`@mantine/dates`)
- Any other Mantine packages

## Server Component Context:
This rule is especially important in Next.js App Router server components where:
- Components run on the server first
- Hydration must match between server and client
- Import patterns affect bundle optimization
